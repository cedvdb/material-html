@import './palettes';
@import './mat-theming-functions';

// maps a string with a palette
$palette-map: (
	'red': $mat-red,
	'pink': $mat-pink,
	'purple': $mat-purple,
	'deep-purple': $mat-deep-purple,
	'indigo': $mat-indigo,
	'blue': $mat-blue,
	'light-blue': $mat-light-blue,
	'cyan': $mat-cyan,
	'teal': $mat-teal,
	'green': $mat-green,
	'light-green': $mat-light-green,
	'lime': $mat-lime,
	'yellow': $mat-yellow,
	'amber': $mat-amber,
	'orange': $mat-orange,
	'deep-orange': $mat-deep-orange,
	'brown': $mat-brown,
	'grey': $mat-grey,
	'blue-grey': $mat-blue-grey
);


/** Generates palette with their contrast*/
@function palette($base-palette, $default: 500, $light: 100, $dark: 700) {
  @return (
		'': map-get($base-palette, $default),
		contrast: mat-contrast($base-palette, $default),

		light: map-get($base-palette, $light),
		light-contrast: mat-contrast($base-palette, $light),

		dark: map-get($base-palette, $dark),
		dark-contrast: mat-contrast($base-palette, $dark)
  );
}


/** gets a mat palette given a string */
@function get-palette($palette) {
	@if type-of($palette) == string {
		// we have a string representing the color
		// then we get we get the correct material palette
		// from a mat palette (for example red)
		$colorKey: map-get($palette-map, $palette);
    $palette: palette($colorKey);
	}
	@return $palette;
}

/** generate the whole palette */
@function whole-palette($primary, $accent, $warn, $success, $isDark) {
	// primary is the color palette for example the blue palette
	$primary: get-palette($primary);
	$accent: get-palette($accent);
	$warn: get-palette($warn);
	$success: get-palette($success);
	$background: '';
	$foreground: '';

	@if $isDark{
		$foreground: $mat-dark-theme-foreground;
		$background: $mat-dark-theme-background;
	}@else{
		$foreground: $mat-light-theme-foreground;
		$background: $mat-light-theme-background;
	}

	$background: extract-mat-bg-l($background);
	$text: extract-mat-txt-color-l($foreground);
	$divider: map-get($foreground, divider);

	@return (
		primary: $primary,
		accent: $accent,
		success: $success,
		warn: $warn,
		text: $text,
		background: $background,
		divider: $divider
	);
}


@function extract-mat-bg-l($mat-colors){
	@return(
		'': map-get($mat-colors, background),
		secondary: map-get($mat-colors, dialog),
		btn : transparent,
		btn-hover: map-get($mat-colors, focused-button),
		btn-active: map-get($mat-colors, selected-button),
		btn-disabled: map-get($mat-colors, disabled-button),
	);
}

@function extract-mat-txt-color-l($mat-colors){
	@return (
		'': map-get($mat-colors, text),
		light: map-get($mat-colors, secondary-text),
		lighter: map-get($mat-colors, hint-text),
	);
}