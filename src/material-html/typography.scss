@import './utils';
/**
* Look here to know where values come from
*	https://material.io/guidelines/style/typography.html#typography-styles
*	summary there:
*	https://getmdl.io/styles/index.html
*/


body, .body1 {
	/* perf optimisation : Default font is the one from OS,
	huge drawback is that it's not displaying font-weight: 500
	correctly on ubuntu. */
	font-family: -apple-system, system-ui, "Segoe UI", Roboto,
	Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
	color: var(--color-txt-primary);
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

h1, h2, h3, h4, h5, h6 {
	margin: 0;
}

$font-weight-map: (
	light: var(--font-weight-light),
	regular: var(--font-weight-regular),
	medium: var(--font-weight-medium),
	bold: var(--font-weight-bold),
);

// 1. Here we have a mixin that outputs the different font properties
@mixin get-typo(
	$font-size: 1rem,
	$line-height: 1,
	$font-weight: regular,
	$letterSpacing: 0,
	$isUpperCase: null) {

	font-size: sprem($font-size);
	letter-spacing: sprem($letterSpacing);
	font-weight: map-get($font-weight-map, $font-weight);
	@if $isUpperCase {
		text-transform: uppercase;
	}
}

 // 2. Here we map the material design levels to our own values that
 // are gonna be passed to the mixin above

 // angular material directly uses sp to px but I don't believe that is correct.
 // 1rem => 16 px => 14sp,
 // so the values below are sp values converted to rem
 $typo-config:(
  h1: (96, 96, light, -1.5, false ),
  h2: (60, 60, regular, -0.5, false),
  h3: (48, 50, regular, 0, false),
  h4: (34, 40, regular, 0.25, false),
  h5: (24, 32, regular, 0, false),
  h6: (20, 32, medium, 0.15, false),
	subtitle1: (16, 28, regular, 0.15, false),
	subtitle2: (14, 22, regular, 0.1, false),
	body1: (16, 24, regular, 0.5, false),
	body2: (14, 20, medium, 0.25, false),
	input: (16, 18, regular, 0, false),
	button: (14, 14, medium, 0.75, true),
	caption: (12, 20, regular, 0.4, false),
	overline: (10, 32, medium, 1.5, true)
);

// applies the type given a key. Example: apply-typo(display-4)
@mixin apply-typo($list) {
	$size : nth($list, 1);
	$line-height : nth($list, 2);
	$weight : nth($list, 3);
	$letterSpacing: nth($list, 4);
	$isUpperCase: nth($list, 5);
	@include get-typo($size, $line-height, $weight, $letterSpacing, $isUpperCase);
}

// for each material value (h6) we apply the typo to h6, .h6
// some html tags don't exist, like body2, but that doesn't matter, since
// we can just use the class when doing the html
@each $mat-val, $config in $typo-config {
  #{$mat-val}, .#{$mat-val} {
    @include apply-typo($config);
  }
}

small {
	@extend .caption;
	color: var(--color-txt-third);
}

time  {
	@extend small;
}
